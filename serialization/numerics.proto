syntax = "proto2";

import "serialization/geometry.proto";
import "serialization/quantities.proto";

package principia.serialization;

option cc_enable_arenas = true;

// We would like to use Cyrillic for the name of this message, but the protobuf
// language only supports ASCII in identifiers.  Sigh.  Blame Kenton.
message ChebyshevSeries {
  message Coefficient {
    oneof coefficient {
      double double = 1;
      Quantity quantity = 2;
      Multivector multivector = 3;
    }
  }
  repeated Coefficient coefficient = 1;
  required Point t_min = 2;
  required Point t_max = 3;
}

message DoublePrecision {
  message Error {
    oneof error {
      double double = 3;
      Quantity quantity = 1;
      Multivector multivector = 2;
    }
  }
  message Value {
    oneof value {
      double double = 3;
      Quantity quantity = 4;
      Point point = 1;
      Multivector multivector = 2;
    }
  }
  required Value value = 1;
  required Error error = 2;
}

message Numerics {
  enum Mode {
    FAST = 0;
    PRECISE =1;
  }
}

// Polynomials follow.

message Polynomial {
  required int32 degree = 1;
  extensions 10000 to 10999;  // Last used: 10000.
}

message PolynomialInMonomialBasis {
  extend Polynomial {
    optional PolynomialInMonomialBasis extension = 10000;
  }
  message Coefficient {
    oneof message {
      double double = 1;
      Quantity quantity = 2;
      Multivector multivector = 3;
    }
  }
  repeated Coefficient coefficient = 1;
  optional Point origin = 2;  // Only in the affine case.
}
